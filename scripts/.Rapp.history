library(Geneland)
library(ape)
cat("((((((1,2),3),4),5),6),7,8); ", file = "tree0.tre", sep = "\n")
cat("((((1,2),(4,5)),3),(6,7),8); ", file = "tree9.tre", sep = "\n")
getwd()
tree0 <- read.tree("tree0.tre")
tree9 <- read.tree("tree9.tre")
plot(tree0)
plot(tree9)
title("yeast data: tree 9")
pdf(file="yeast_tree0.pdf")
plot(tree0)
title("yeast data")
dev.off()
pdf(file="yeast_tree9.pdf")
plot(tree9)
title("yeast data")
dev.off()
cat("(((sbc,mac),gris),(((ntm,stm),(((gvd,str),(eyr,fem)),for)),dual)); ", file = "new_guide.tre", sep = "\n")
cat("((sbc, (mac, gris)), (((fem, (for, (eyr, (gvd, str)))), (ntm, stm)), dual)); ", file = "old_guide.tre", sep = "\n")
library(ape)
old_tree <- read.tree("old_guide.tre")
new_tree <- read.tree("new_guide.tre")
plot(old_tree)
pdf("males_all_guide_trees.pdf")
plot(old_tree)
plot(new_tree)
dev.off()
integrand <- function(x) {exp(-x/2)}
integrate(integrand, lower= -Inf, upper= Inf)
library(geneland)
library(Geneland)
date
date()
q()
library(Geneland)
q()
library(Geneland)
f<-function(x) {1/(x^2+1)^p}
f(8)
integrate(f,0,Inf)
f<-function(x) {1/(x^2+1)^2}
integrate(f,0,Inf)
f<-function(x) {1/(x^2+1)^1}
integrate(f,0,Inf)
library(ape)
getwd()
tree1<-read.tree("new_tree.tre")
tree1<-read.tree("new_guide.tre")
plot(tree1)
pdf("guide_tree.pdf")
plot(tree1)
dev.off()
library(Geneland)
citation("Geneland")
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)#
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)#
group <- gl(2, 10, 20, labels = c("Ctl","Trt"))#
weight <- c(ctl, trt)
lm.D9 <- lm(weight ~ group)
summary(lm.D9)
plot(lm.D9)
opar <- par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))#
plot(lm.D9, las = 1)      # Residuals, Fitted, ...#
par(opar)
oparÂ¡par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
opar=par(mfrow = c(2,2), oma = c(0, 0, 1.1, 0))
plot(lm.D9, las = 1)
par(opar)
plot(lm.D9,which=1)
library(ape)#
library(phylolm)
tree<-rcoal(17)
X1<-rbinTrait(phy=tree,beta=0.5,alpha=1)
X1
str(X1)
taxa=sort(tree$tip.label)
taxa
getwd()
primates_data<-read.table("data_prueba.csv",header=TRUE)
str(primates_data)
primates_data<-read.table("data_prueba.csv",header=TRUE, sep=",")
str(primates_data)
x<- primates_data$x
names(x)<-primates_data$species
x
y<- primates_data$y
names(y)<-primates_data$species
z<- primates_data$z
names(z)<-primates_data$species
primates_data2<-data.frame(y=x,x1=y,x2=z))
primates_data2<-data.frame(y=x,x1=y,x2=z)
primates_data2
update.packages()
a=c(1,2,3,4,5)
a[-1]
0.1+0.2
load("/Users/Clauberry/Documents/phylo/projects/ancestor_primates/final_dataset/data.combined2.Rda")
q()
exp(-0.1)
choose(6,4)
1.234+0.25
1.234-2.468
(2*2.468)^3
install.packages("geomorph")
library(geomorph)
mosquito
head(mosquito)
data(mosquito)
head(mosquito)
mosquito$wings
head(mosquito$wings)
head(mosquito$wingshape)
mosquito$wingshape[1,1,1]
mosquito$ind
length(mosquito$ind)
data(hummingbirds)
hummingbirds
install.packages("ctv")
library(ctv)
install.views("Phylogenetics")
library(ape)
tree=rcoal(10)
plot(tree)
write.tree(tree,file="randTree10.txt")
getwd()
quit()
5.5/2
7.1/2
8.3/2
9.5/2
4.75/2
4.15/2
3.55/2
2.75/2
3/4
2.5/4
5.5/4
7.1/4
8.3/4
5.9+1.5
3.9/2
5.9/2
5.5/2
7.4/2
94/2
75-47
1000-848
(45+47+9)
(45+47+9)/2
choose(24,4)
480+180
plot()
plot(x=c(5,6),y=c(5,6))
a=373,388,200
a=373388200
b=274637946
(a-b)/a
a=373388200
b=274637946
(a-b)/b
library(ape)
tree=rcoal(15)
plot(tree)
write.tree(tree)
2.5/2
1.65*2
1.75*2
2.7*2
2.75*2
install.packages("lubridate")
help(lubridate)
??lubridate
x="Tue Jun  2"
parse_date_time(x,"%a %b $d")
library(lubridate)
parse_date_time(x,"%a %b $d")
parse_date_time(x,"%a %b %d")
parse_date_time(x,"%a %b  %d")
parse_date_time2(x,"%a %b  %d")
fast_strptime(x,"%a %b  %d")
fast_strptime(x,"%a %b %d")
x
y=paste(x," 10:36:08")
y
y=paste(x,"10:36:08")
y
parse_date_time(y,"%a%b%d %H%M%S")
parse_date_time(y,"%a %b  %d %H:%M:%S")
floor(9.7)
sec=19865
sec/3600
hrs=floor(secs/3600)
hrs=floor(sec/3600)
hrs
sec/60
sec/60-hrs*60
mins=floor(sec/60-hrs*60)
mins
sec/60-hrs*60-mins*60
sec/60-hrs*60
sec/60-hrs*60-mins
60*(sec/60-hrs*60-mins)
choose(15,4)
1-1-0.067
1+2-0.067
1-1+2*0.067
2.933/3
-0.067/3
0.134/3
(1-0.544-0.05299)/3
(1+2*0.544-0.05299)/3
(1-0.544+2*0.05299)/3
init<-as.POSIXct("3:22:28")
init<-as.POSIXct("3:22:28",format="%H:%M:%S")
fin<-as.POSIXct("7:06:09",format="%H:%M:%S")
fin-init
hrs=48-3.728056
hrs
hrs*60
hrs*60*60
0.02*1000
0.02*200
4*8
library(ape)#
gt = "((((1,2),(3,4)),5),6);"#
phy=read.tree(text=gt)#
filename="gt1"
Nn <- length(phy$tip.label) + phy$Nnode
Nn
library(ape)#
gt = "((((1,2),(3,4)),5),6);"#
phy=read.tree(text=gt)#
filename="gt1"
n=1
if (n <= length(phy$tip.label)){#
     tre <- root(phy, outgroup=n, resolve.root=T)#
     } else {#
       tre <- root(phy, node=n, resolve.root=T)#
       }
write.tree(tre)
tre$edge.length <- rep(1, length(phy$edge.length))
write.tree(tre)
library(ape)#
gt = "((((1,2),(3,4)),5),6);"#
phy=read.tree(text=gt)#
filename="gt1"
n=1
tre <- root(phy, outgroup=n, resolve.root=T)
write.tree(tre)
trees=c()
trees=c(trees,tre)
trees
gt = "((((1,2),(3,4)),5),6);"#
phy=read.tree(text=gt)#
filename="gt1"#
trees=c()
Nn <- length(phy$tip.label) + phy$Nnode#
for (n in 1:Nn){#
  if (n <= length(phy$tip.label)){#
     tre <- root(phy, outgroup=n, resolve.root=T)#
     } else {#
       tre <- root(phy, node=n, resolve.root=T)#
       }#
   #tre$edge.length <- rep(1, length(phy$edge.length))                                                                                 #
   #plot(tre,no.margin=T) # just to double-check                                                                                       #
  trees=c(trees,tre)#
}
trees=unique(trees)#
for(i in 1:length(trees)){#
  found = false#
  for(t in trees[-i]){#
    if(all.equal(trees[i],t,use.edge.length=FALSE)){#
      found = true#
      break#
    }#
  }#
  if(!found){#
    write.tree(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
trees=unique(trees)#
for(i in 1:length(trees)){#
  found = FALSE#
  for(t in trees[-i]){#
    if(all.equal(trees[i],t,use.edge.length=FALSE)){#
      found = TRUE#
      break#
    }#
  }#
  if(!found){#
    write.tree(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
trees
for(t in trees){}
for(t in trees){write.tree(t)}
Nn <- length(phy$tip.label) + phy$Nnode#
for (n in 1:Nn){#
  if (n <= length(phy$tip.label)){#
     tre <- root(phy, outgroup=n, resolve.root=T)#
     } else {#
       tre <- root(phy, node=n, resolve.root=T)#
       }#
   #tre$edge.length <- rep(1, length(phy$edge.length))                                                                                 #
   #plot(tre,no.margin=T) # just to double-check                                                                                       #
  trees=c(trees,tre)#
}
trees
or(i in 1:length(trees)){#
  found = FALSE#
  for(t in trees[-i]){#
    if(all.equal(trees[i],t,use.edge.length=FALSE)){#
      found = TRUE#
      break#
    }#
  }#
  if(!found){#
    write.tree(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
for(i in 1:length(trees)){#
  found = FALSE#
  for(t in trees[-i]){#
    if(all.equal(trees[i],t,use.edge.length=FALSE)){#
      found = TRUE#
      break#
    }#
  }#
  if(!found){#
    write.tree(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
trees
trees[1]
str(trees)
Nn <- length(phy$tip.label) + phy$Nnode#
for (n in 1:Nn){#
  if (n <= length(phy$tip.label)){#
     tre <- root(phy, outgroup=n, resolve.root=T)#
     } else {#
       tre <- root(phy, node=n, resolve.root=T)#
       }#
   #tre$edge.length <- rep(1, length(phy$edge.length))                                                                                 #
   #plot(tre,no.margin=T) # just to double-check                                                                                       #
  trees=c(trees,write.tree(tre))#
}
trees
trees=c()
Nn <- length(phy$tip.label) + phy$Nnode#
for (n in 1:Nn){#
  if (n <= length(phy$tip.label)){#
     tre <- root(phy, outgroup=n, resolve.root=T)#
     } else {#
       tre <- root(phy, node=n, resolve.root=T)#
       }#
   #tre$edge.length <- rep(1, length(phy$edge.length))                                                                                 #
   #plot(tre,no.margin=T) # just to double-check                                                                                       #
  trees=c(trees,write.tree(tre))#
}
trees
unique(trees)
for(i in 1:length(trees)){#
  found = FALSE#
  for(t in trees[-i]){#
    if(all.equal(read.tree(trees[i]),read.tree(t),use.edge.length=FALSE)){#
      found = TRUE#
      break#
    }#
  }#
  if(!found){#
    write.tree(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
for(i in 1:length(trees)){#
  found = FALSE#
  for(t in trees[-i]){#
    if(all.equal(read.tree(text=trees[i]),read.tree(text=t),use.edge.length=FALSE)){#
      found = TRUE#
      break#
    }#
  }#
  if(!found){#
    write.tree(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
trees=unique(trees)#
for(i in 1:length(trees)){#
  found = FALSE#
  for(t in trees[-i]){#
    if(all.equal(read.tree(text=trees[i]),read.tree(text=t),use.edge.length=FALSE)){#
      found = TRUE#
      break#
    }#
  }#
  if(!found){#
    write(trees[i],file=paste0(filename,".txt"),append=TRUE)#
  }#
}
0.085*2
2.25*4
800*17.5
538-117
14*3
42*8
336*5
1680*4
2900/25000
a=c(1,2,3)
a
str(a)
u <- c(1,2,.01,.01)#
f(0.1,u)       # 0.2980949#
(1-f(0.1,u))/2 # 0.3509525#
f(0.3,u)       # 0.2608861#
(1-f(0.3,u))/2 # 0.3695569
f <- function(gamma,u){#
 (1-gamma)^2*(1-2/3*exp(-u[4]-u[3])) + #
     gamma^2*(1-2/3*exp(-u[4]-u[1])) +#
  2*gamma*(1-gamma)*(1-exp(-u[4])+exp(-u[4]-u[2])/3)#
}
u <- c(1,2,.01,.01)#
f(0.1,u)       # 0.2980949#
(1-f(0.1,u))/2 # 0.3509525#
f(0.3,u)       # 0.2608861#
(1-f(0.3,u))/2 # 0.3695569
x <- seq(0,1,by=0.01)#
y <- f(x,u)#
plot(x,y,type="l");lines(x, (1-y)/2, lty=2)#
plot(x,y,type="l",xlim=c(0,.5),ylim=c(.249,0.401))#
lines(x, (1-y)/2, lty=2)
v <- c(0,4.1,.1,.1)#
y <- f(x,v)#
plot(x,y,type="l");lines(x, (1-y)/2, lty=2)#
plot(x,y,type="l",xlim=c(0,.5))#
lines(x, (1-y)/2, lty=2)
choose(24,4)
choose(6,4)
36000/(60*60)
58000/(60*60)
8*16
128/24
choose(8,4)
rand()
runif()
runif(1)
2890/18
(10000/500)*20
400/60
a=198434.907108415
a/60
a/(60*60)
a/(60*60)*3
b=a/(60*60)*3
b/24
a=198434.907108415
a/(60*60)
a/(60*60)*2
b=a/(60*60)*2
b/24
a=474161.239420772
a/(60*60)
b=a/(60*60)
b/24
1200/60
1265+62
library(ape)
871/50000
library(phangorn)
?bootstrap.phyDat
install.packages("phybase")
23-9+1
46-33+1
100-81+1
16+14+14+20
69-56+1
100-36
100-67
23-10+1
100-79+1
14+14+14+22
100-69
install.packages("ape")
q()
g=0.1
print("gamma $g")
print("gamma ",g)
print(paste0("gamma ",g))
library(ape)
tre=read.tree(text="(3,((4,(5,6)),(1,2)));")
root(tre,6)
rt=root(tre,6)
write.tree(rt)
is.rooted(rt)
rt=root(tre,6,resolve=TRUE)
rt
write.tree(rt)
is.rooted(rt)
bip1=read.tree(text="((1,2,3),4,5,6);")
prop.clades(bip1,rt)
prop.clades(bip1,rt,rooted=TRUE)
library(ggplot2)#
n <- 100 #star+normal houses#
nsize <- 100 #sample size per m and gap#
#
m <- seq(2,500,by=10)#
gap <- seq(0,0.5,by=0.01)#
nreps=length(m)*length(gap)#
#
pstar=rep(0,nreps)#
p1=rep(0,nreps)#
error=rep(0,nreps)
j = 1#
for(mi in m){#
    for(g in gap){#
        pst <- runif(1,g,1)#
        p1 <- pst-g#
        p2 <- runif(n-1,0,p1)#
        p <- c(pst,p1,p2)#
        p <- p/sum(p)#
#
        pstar[j] <- p[1]#
        p1[j] <- p[2]#
#
        error = 0#
        for(i in 1:nsize){#
            x <- rmultinom(1,mi,p)#
            maxima = which(x==max(x))#
            if(length(maxima) > 1){#
                if(1 %in% maxima){#
                    if(runif(1,0,1) > 0.5){#
                        error = error+1#
                    }#
                } else {#
                    error = error +1#
                }#
            } else {#
                if(which(x==max(x)) != 1){#
                    error = error+1#
                }#
            }#
        }#
        error[j] = error/nsize#
        j = j+1#
    }#
}
data
data=data.frame(m=m,pstar=pstar,p1=p1,gap=gap,error=error)
data
head(data)
library(ggplot2)#
n <- 100 #star+normal houses#
nsize <- 100 #sample size per m and gap#
#
m <- seq(2,500,by=10)#
gap <- seq(0,0.5,by=0.01)#
nreps=length(m)*length(gap)
j = 1#
for(mi in m){#
    for(g in gap){#
        #print(mi)#
        #print(g)#
        pst <- runif(1,g,1)#
        p1tmp <- pst-g#
        p2 <- runif(n-1,0,p1tmp)#
        p <- c(pst,p1tmp,p2)#
        p <- p/sum(p)#
        #print(p)#
#
        pstar[j] <- p[1]#
        p1[j] <- p[2]#
        #print(pstar[j])#
        #print(p1[j])#
        err = 0#
        for(i in 1:nsize){#
            x <- rmultinom(1,mi,p)#
            maxima = which(x==max(x))#
            if(length(maxima) > 1){#
                if(1 %in% maxima){#
                    if(runif(1,0,1) > 0.5){#
                        err = err+1#
                    }#
                } else {#
                    err = err +1#
                }#
            } else {#
                if(which(x==max(x)) != 1){#
                    err = err+1#
                }#
            }#
        }#
        error[j] = err/nsize#
        j = j+1#
    }#
}
data=data.frame(m=m,pstar=pstar,p1=p1,gap=gap,error=error)
head(data)
plot <- ggplot(data,aes(x=gap,y=m))+#
    geom_point(aes(colour=error), size=3, alpha=0.3)#+xlim(0,0.25)+ylim(100,150)#
plot(plot)
pl <- ggplot(data,aes(x=gap,y=m))+#
    geom_point(aes(colour=error), size=3, alpha=0.3)#+xlim(0,0.25)+ylim(100,150)
plot(pl)
pl <- ggplot(data,aes(x=gap,y=m))+#
    geom_point(aes(colour=error), size=3)#, alpha=0.3)#+xlim(0,0.25)+ylim(100,150)
plot(pl)
integrand <- function(x) {1/((x+1)*sqrt(x))}
integrate(integrand, lower = 0, upper = Inf)
a=10585
b=416
a/(a+b)
b/(a+b)
A=matrix(c(1,1,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1,0,1,1,1,0,0,1,1),ncol=5)
det(A)
A=matrix(c(1/2,0,0,-1/2,1/2,1/2,0,0,1/2,-1/2,1/4,1/2,1/2,-1/4,-1/4,-1/4,1/2,-1/2,1/4,1/4,-1/4,-1/2,1/2,1/4,1/4),ncol=5)
det(A)
A=matrix(c(1/8,1/8,-1/8,1/4,1/4,1/2,-1/2,1/8,-1/8,-1/8,1/4,1/4,-1/2,1/2,
-1/8,1/8,1/8,-1/4,-1/4,1/2,1/2,
1/2,1/2,-1/2,0,0,0,0,
1/2,-1/2,1/2,0,0,0,0,
-1/4,1/4,1/4,1/2,-1/2,0,0,
-1/2,1/2,1/2,0,1/4,0,0),ncol=7)
A
A=matrix(c(1/8,-1/8,-1/8,1/4,1/4,1/2,-1/2,1/8,-1/8,-1/8,1/4,1/4,-1/2,1/2,
-1/8,1/8,1/8,-1/4,-1/4,1/2,1/2,
1/2,1/2,-1/2,0,0,0,0,
1/2,-1/2,1/2,0,0,0,0,
-1/4,1/4,1/4,1/2,-1/2,0,0,
-1/2,1/2,1/2,0,1/4,0,0),ncol=7)
A
A=matrix(c(1/8,-1/8,-1/8,1/4,1/4,1/2,-1/2,1/8,-1/8,-1/8,1/4,1/4,-1/2,1/2,
-1/8,1/8,1/8,-1/4,-1/4,1/2,1/2,
1/2,1/2,-1/2,0,0,0,0,
1/2,-1/2,1/2,0,0,0,0,
-1/4,1/4,1/4,1/2,-1/2,0,0,
-1/2,1/2,1/2,0,1/4,0,0),ncol=7)
A
rowSums(A)
colSums(A)
det(A)
det(A)*8
det(A)*16
det(A)*32
5/32
2^5
2^4
4/16
library(ape)
d=read.dna("~/Documents/phylo/projects/CladeCondProb/ccdprobs/datasets/birds4-clean.phy")
ds=dist.dna(d)
tr=nj(ds)
plot(tr)
tr$edge.length
write.tree(tr)
A=matrix(c(1/2,1/2,-1/2,0,0,0,0,
1/2,-1/2,1/2,0,0,0,0,
0,0,0,1/2,1/2,-1/2,0,
0,0,0,1/2,-1/2,1/2,0,
-1/4,1/4,1/4,1/4,-1/4,-1/4,1/2,
-1/4,1/4,1/4,-1/4,1/4,1/4,-1/2,
1/4,-1/4,-1/4,-1/4,1/4,1/4,1/2),ncol=7)
A
det(A)
5/32
4/64
1/5
1/6
1/7
1/8
A=matrix(c(1/2,1/2,-1/2,0,0,1/2,-1/2,1/2,0,0,-1/2,0,1/2,1/2,-1/2,0,1/2,0,-1/2,1/2,0,-1/2,0,1/2,1/2),ncol=5)
A
A=matrix(c(1/2,1/2,-1/2,0,0,1/2,-1/2,1/2,0,0,-1/2,0,1/2,1/2,-1/2,0,1/2,0,-1/2,1/2,0,-1/2,0,1/2,1/2),nrow=5)
A
det(A)
B=matrix(c(1,1,0,0,0,1,0,1,1,0,0,1,1,1,0,1,0,1,0,1,0,0,0,1,1),ncol=5)
B
det(B)
0.02
sqrt(0.02)
5+4+3+2+1
880+900+300+500
51-17
34/5
75000*0.0222
0.95*0.00005
0.05*0.00005
0.0222+0.139
6*1000000
a=6*1000000
a/(60*60)
b=a/(60*60)
b/24
835-45
1600-400-300-400
1200+790-400-300-400
1200+790-400-300-400-835-30
65+820+300
65+820+300+15
820+300+15+790
400+300+400+835+30
1500*18
36*200+2000
4*80
90*12
1080+320
1400/12
setwd("Documents/phylo/projects/CladeCondProb/ccdprobs/scripts/")
load("data_normal_birds.Rda")
data1 = data[data$trees=="((1,2),3,4);",]#
data2 = data[data$trees=="((1,3),2,4);",]#
data3 = data[data$trees=="(1,(2,3),4);",]
sum(data1$w.joint) ## 0.5432#
sum(data1$w.cond)
wtd.hist(data1$dxy.cond, weight=w1.cond)#
abline(v=mm, col="red")
mm = weighted.mean(data1$dxy.joint,w1.joint) ## 0.0261
w1.joint = data1$w.joint/sum(data1$w.joint)#
w1.cond = data1$w.cond/sum(data1$w.cond)#
## mean MB dxy: 0.0261#
mm = weighted.mean(data1$dxy.joint,w1.joint) ## 0.0261#
weighted.mean(data1$dxy.cond,w1.cond) ## 0.0251#
## quartiles:#
weighted.quantile(data1$dxy.joint,w1.joint,probs=0.25) ## 0.02164#
weighted.quantile(data1$dxy.cond,w1.cond,probs=0.25) ## 0.02125#
weighted.quantile(data1$dxy.joint,w1.joint,probs=0.75) ## 0.02998#
weighted.quantile(data1$dxy.cond,w1.cond,probs=0.75) ## 0.0
library(ape)#
source('branch-length_lik.r')#
source('4taxa_functions.r')#
library(ggplot2)#
library(weights)#
library(mvtnorm)
w1.joint = data1$w.joint/sum(data1$w.joint)#
w1.cond = data1$w.cond/sum(data1$w.cond)#
## mean MB dxy: 0.0261#
mm = weighted.mean(data1$dxy.joint,w1.joint) ## 0.0261#
weighted.mean(data1$dxy.cond,w1.cond) ## 0.0251#
## quartiles:#
weighted.quantile(data1$dxy.joint,w1.joint,probs=0.25) ## 0.02164#
weighted.quantile(data1$dxy.cond,w1.cond,probs=0.25) ## 0.02125#
weighted.quantile(data1$dxy.joint,w1.joint,probs=0.75) ## 0.02998#
weighted.quantile(data1$dxy.cond,w1.cond,probs=0.75) ## 0.02921
wtd.hist(data1$dxy.cond, weight=w1.cond)#
abline(v=mm, col="red")
sum(data2$w.joint) ## #
sum(data2$w.cond) ## #
w2.joint = data2$w.joint/sum(data2$w.joint)#
w2.cond = data2$w.cond/sum(data2$w.cond)
mm = weighted.mean(data2$dxy.joint,w2.joint) ## #
weighted.mean(data2$dxy.cond,w2.cond)
mm
weighted.quantile(data2$dxy.joint,w2.joint,probs=0.25) ## #
weighted.quantile(data2$dxy.cond,w2.cond,probs=0.25) ## #
weighted.quantile(data2$dxy.joint,w2.joint,probs=0.75) ## #
weighted.quantile(data2$dxy.cond,w2.cond,probs=0.75)
summary(data2$w.joint)#
summary(data2$w.cond)
wtd.hist(data2$dxy.joint, weight=w2.joint)#
abline(v=mm, col="red")
wtd.hist(data2$dxy.cond, weight=w2.cond)#
abline(v=mm, col="red")
sum(data3$w.joint) ## #
sum(data3$w.cond) ## #
w3.joint = data3$w.joint/sum(data3$w.joint)#
w3.cond = data3$w.cond/sum(data3$w.cond)#
## mean MB dxy: 0.0255
mm = weighted.mean(data3$dxy.joint,w3.joint) ## #
weighted.mean(data3$dxy.cond,w3.cond) ## #
## quartiles:#
weighted.quantile(data3$dxy.joint,w3.joint,probs=0.25) ## #
weighted.quantile(data3$dxy.cond,w3.cond,probs=0.25) ## #
weighted.quantile(data3$dxy.joint,w3.joint,probs=0.75) ## #
weighted.quantile(data3$dxy.cond,w3.cond,probs=0.75)
mm
summary(data3$w.joint)#
summary(data3$w.cond)
wtd.hist(data3$dxy.joint, weight=w3.joint)#
abline(v=mm, col="red")
wtd.hist(data3$dxy.cond, weight=w3.cond)#
abline(v=mm, col="red")
head(data2)
data2.1 = subset(data2,tx1 == 1)#
summary(data2.1)
w2.1.joint = data2.1$w.joint/sum(data2.1$w.joint)#
w2.1.cond = data2.1$w.cond/sum(data2.1$w.cond)#
weighted.mean(data2.1$d1x.joint,w2.1.joint) ###
weighted.mean(data2.1$d1x.cond,w2.1.cond)
weighted.mean(data2.1$d2x.joint,w2.1.joint) ###
weighted.mean(data2.1$d2x.cond,w2.1.cond) ###
## mean MB d3y: 0.0813#
weighted.mean(data2.1$d3y.joint,w2.1.joint) ###
weighted.mean(data2.1$d3y.cond,w2.1.cond) ###
## mean MB d4y: 0.103#
weighted.mean(data2.1$d4y.joint,w2.1.joint) ###
weighted.mean(data2.1$d4y.cond,w2.1.cond) ###
## mean MB dxy: 0.0213#
weighted.mean(data2.1$dxy.joint,w2.1.joint) ###
weighted.mean(data2.1$dxy.cond,w2.1.cond)
