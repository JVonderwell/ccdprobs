## testing with chosen root node
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta11-root -s 2767106266 --fixedQ --loglikweight -eta 1.1 > eta11-root.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta11-root-2 --fixedQ --loglikweight -eta 1.1 > eta11-root-2.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta11-root-3 --fixedQ --loglikweight -eta 1.1 > eta11-root-3.log

time ../../Code/bistro/bistro -f ../../Data/sim-artiodactyl-6.fasta -b 1000 -r 1000 -m 2 -o eta11-root-art --fixedQ --loglikweight -eta 1.1 > eta11-root-art.log


## testing with longer bl, but shorter internal bl
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs-long-short.fasta -b 1000 -r 1000 -m 2 -o eta11-long-short --fixedQ --loglikweight -eta 1.1 > eta11-long-short.log


## testing with longer bl
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs-long.fasta -b 1000 -r 1000 -m 2 -o eta11-long --fixedQ --loglikweight -eta 1.1 > eta11-long.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs-long.fasta -b 1000 -r 1000 -m 2 -o eta10-long --fixedQ --loglikweight > eta10-long.log

## testing different values of eta for sim-cats-dogs
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta2 -s 2767106266 --fixedQ --loglikweight -eta 2 > eta2.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta4 -s 2767106266 --fixedQ --loglikweight -eta 4 > eta4.log

time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta02 -s 2767106266 --fixedQ --loglikweight -eta 0.2 > eta02.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta08 -s 2767106266 --fixedQ --loglikweight -eta 0.8 > eta08.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta11 -s 2767106266 --fixedQ --loglikweight -eta 1.1 > eta11.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta15 -s 2767106266 --fixedQ --loglikweight -eta 1.5 > eta15.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o eta09 -s 2767106266 --fixedQ --loglikweight -eta 0.9 > eta09.log


## rerun cats and dogs sim data after adding eta to make sure it is
   the same
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o fixedQlik3 -s 2767106266 --fixedQ --loglikweight > fixedQlik3.log

## rerun cats and dogs sim data after changing code to check alpha<1
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 -o fixedQlik2 --fixedQ --loglikweight > fixedQlik2.log


## to compare randQ, fixedQ, lik and parsimony weight
## and to mrbayes ~/software/MrBayes/mb sim-artiodactyl-6.nex
## darwin00
time ../../Code/bistro/bistro -f ../../Data/sim-artiodactyl-6.fasta -b 1000 -r 1000 -m 2 --threads 5 -o randQpars-art > randQpars-art.log
time ../../Code/bistro/bistro -f ../../Data/sim-artiodactyl-6.fasta -b 1000 -r 1000 -m 2 --threads 5 -o fixedQpars-art --fixedQ > fixedQpars-art.log
time ../../Code/bistro/bistro -f ../../Data/sim-artiodactyl-6.fasta -b 1000 -r 1000 -m 2 --threads 5 -o randQlik-art --loglikweight > randQlik-art.log
time ../../Code/bistro/bistro -f ../../Data/sim-artiodactyl-6.fasta -b 1000 -r 1000 -m 2 --threads 5 -o randQno-wt-art --no-reweight > randQno-wt-art.log
time ../../Code/bistro/bistro -f ../../Data/sim-artiodactyl-6.fasta -b 1000 -r 1000 -m 2 --threads 4 -o fixedQlik-art --fixedQ --loglikweight > fixedQlik-art.log



## to compare randQ, fixedQ, lik and parsimony weight
## and to mrbayes ~/software/MrBayes/mb sim-cats-dogs.nex
## darwin00
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 --threads 5 -o randQpars > randQpars.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 --threads 5 -o fixedQpars --fixedQ > fixedQpars.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 --threads 5 -o randQlik --loglikweight > randQlik.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 --threads 5 -o randQno-wt --no-reweight > randQno-wt.log
time ../../Code/bistro/bistro -f ../../Data/sim-cats-dogs.fasta -b 1000 -r 1000 -m 2 --threads 4 -o fixedQlik --fixedQ --loglikweight > fixedQlik.log





## to compare with artiodactyl and cats-dogs after improving topCounts
## darwin03
time ../../Code/bistro/bistro -f ../../Data/sim6.fasta -b 10000 -r 10000 -m 2 -o randQ05-6 --threads 10  > randQ05-6.log
time ../../Code/bistro/bistro -f ../../Data/sim6.fasta -b 10000 -r 10000 -m 2 -o randQ20-6 --threads 10  --parsimony-scale 2 > randQ20-6.log
## darwin04
time ../../Code/bistro/bistro -f ../../Data/sim12.fasta -b 10000 -r 10000 -m 2 -o randQ05-12 --threads 10  > randQ05-12.log
time ../../Code/bistro/bistro -f ../../Data/sim12.fasta -b 10000 -r 10000 -m 2 -o randQ20-12 --threads 10  --parsimony-scale 2 > randQ20-12.log


===================================================================================================
- Instructions after run:
1) rename weights, trees, and blOneRep.txt based on fromto and nice/ugly bl
2) remove out, fasta, make clean
3) check git status in each computer, and do git add, git commit (should be on different files)
4) also do git pull
5) after merging, do git push in all computers
6) do git pull in my mac, should have all weights files
7) move weights, trees, blOneRep.txt, logw files to Examples/Simulations/
9) run plotWeights.r, modify code to read all weights and merge data, create plot for nice/ugly bl


======= simulations1===================
20 replicates for nice bl, 20 replicates for ugly bl
using cats-dogs data, and subsets for ntaxa=3,4,...,12
for nice bl: all bl 0.15; for ugly bl, depending on subset taxa
using: blOneRep.pl and blAllReps.pl
summarizing with plotWeights.r: ess% and time.

* 6/15 12pm: nice branches
darwin00:
1) compile bistro for darwin.
2) check that ape is installed in R: yes
3) Create folder Examples/Simulations
/s/std/bin/stashticket
/s/std/bin/runauth /usr/bin/screen -S blreps?
ssh darwin00
CladeDist/
	CladeDist1/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 1 -to 5
	CladeDist2/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 6 -to 10
	CladeDist3/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 11 -to 15
	CladeDist4/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 16 -to 20
screen -r blreps?
expected to finish in 5 hours: 6/15 5pm

* 6/9 12pm: ugly branches
darwin00:
1) compile bl
2) check that ape is installed
3) create folder Examples/Simulations
4) comment out the line with nice BL
/s/std/bin/stashticket
/s/std/bin/runauth /usr/bin/screen -S blreps?
ssh darwin00
CladeDist/
	CladeDist5/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 1 -to 5
	CladeDist6/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 6 -to 10
	CladeDist7/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 11 -to 15
	CladeDist8/ccdprobs/Bistro/Scripts
		perl blAllReps.pl -from 16 -to 20
screen -r blreps?
expected to finish in 6 hours: 6/15 6pm
but this can take longer because ugly bl are harder
